
------------------------------------------------------------------------
------------------------------------------------------------------------

The first part of this lecture is going to focus on basic competency in Java programming.  
It must be emphasized over and over that the only way to become a competent software developer 
and obtain the necessary skills is by doing!  Just reading the book is not sufficient for establishing 
commercially viable software skills or even basic competency in programming!!!  Today's lecture will 
focus on the basics.  Students. will be given a series of assignments in class that will be due at 
the end of the lecture.


------------------------------------------------------------------------
Students should be able to show basic comptency with development tools:
------------------------------------------------------------------------

(*) Starting up a Java IDE and knowing what an IDE is (big hint, ECLIPSE)
(*) Creating a Java Project in Eclipse
(*) Creating a Java Source File in Eclipse (with / without an optional public static void main ...)
(*) Entering syntactically correct Java code into Eclipse
(*) Being able to use the hints in Eclipse to see what functions are available to call
(*) Running a Java Program (and knowing how/where to specify command line arguments in Eclipse)

------------------------------------------------------------------------
Students should have the following basic Java programming skills
------------------------------------------------------------------------


(*) Create a public class in Java
(*) Creating a "public static void main" within the public class and reading command 
    line arguments from String [] args
(*) Using System.out to write program output to the console
(*) Creating a function in Java that has parameters and being able to call it
(*) Understanding what "import" is and knowing where to import and what to import 
    for the various Java built in utilities
(*) Open a file for reading
(*) Understand and properly deal with classes that throw Exceptions
(*) Reading text from a file (either word by word or a line at a time)
(*) Create a new file for writing data 
(*) Writing data to the newly created file
(*) Opening an existing file and appending data to it
(*) Creating an Array of any primitive type or built in type (e.g. int,double,char,String)
(*) Using Random to populate an Array
(*) Using the Java Utility "Arrays" to fill , sort and do a binarySerach on an Array.
(*) Using an ArrayList<> instead of an array
(*) Write code to create a class that contains non-static methods and data
(*) Be able to create an instance of this class by calling "new" with the appropriate "constructor"

You will be given a series of programming questions that will range from extremely easy to 
more difficult.  For the extremely easy, every student should be able to complete them by end of 
the lecture.  If students are unable to complete the extremely easy by end of lecture, then 
they will have to arrange outside of class time with me so we can go over any difficults in detail.  
There's no giving up.  Achieving competency is easily attainable with the right amount of effort.
When you are done with a question, submit your answer.  If you want a head start review the prior 
lectures notes, the code on github and Chapters 4 and 7 in the Java text book and of course the 
assignment questions.
