/ Course       : CMP-129
// Title       : Adding Data to JTable from an ArrayList of PriceRecord
// Instructor  : JReynolds


In previous lectures we downloaded data from Yahoo.com and now we are going to
take the data we downloaded and display int in a table. To do this we will make
up the following classes :

   1) A class to hold and invididual Record
   2) A class that holds the history of all Records
   3) A class to display the data


   public class PriceRecrod {

        public String date;
	public double open;
	public double high;
	public double low;
	public double close
	public long   volume;
	public double adjclose;

	public void parse( String line ) {
	  String [] fields = line.parse(",");
	  if ( fields.length!= 7) return;
	  int i = 0;
	  date     = fields[i++];
	  open     = Double.parseDouble(fields[i++]);
	  high     = Double.parseDouble(fields[i++]);
	  low      = Double.parseDouble(fields[i++]);
	  close    = Double.parseDouble(fields[i++]);
	  volume   = Long.parseLong(fields[i++]);
	  adjclose = Double.parseDouble(fields[i++]);
	}
   }


   public class PriceHistory {

      ArrayList<PriceRecord> prices;

      
   }


2) To display the data we will add methods

   a) public String [][] getData()

   getData() will be used to convert the ArrayList<PriceRecord>
   to a 2D Array of Strings that can be displayed in a JTable.

   b) public String [] getCols()

   Return the column Names so they can displayed in a table


3) Implementing the method String [][] getData in PriceHistory
   This will allow us to pass the data so it can be displayed
   in a JTable

   public class PriceHistory {

      ArrayList<PriceRecord> prices;
      String                 symbol;

      public String [][] getData() {

         String [][] data = new String[prices.size()[7];
	 for( int i = 0; i < prices.size() ; i++ ){
	     PriceRecrod rec = prices[i];
	     int j = 0;
	     data[i][j++] = rec.date;
	     data[i][j++] = Double.toString(rec.open);
	     data[i][j++] = Double.toString(rec.high);
	     data[i][j++] = Double.toString(rec.low);
	     data[i][j++] = Double.toString(rec.close);
	     data[i][j++] = Long.toString(rec.volume);
	     data[i][j++] = Double.toString(rec.adjclose);
	 }	 
	 return data;
      }
   }
   

4) Implementing the method String [] getCols in PriceHistory

   public class PriceHistory {

      ArrayList<PriceRecord> prices;

      public String [] getCols() {
         String [] cols = { "Date","Open","High","Low","Close","Volume","AdjColse"};
	 return cols;
      }

5) Now we can create a class to display PriceHistory Data

   public class PriceTableView extends JFrame {
       private final int width   = 500;
       private final int height  = 700;
       private JTable       table;
       private PriceHistory prices;
       

       public PriceTableView( PriceHistory prices ) {
          super( "Price History Table For " + prices.Symbol);
	  this.prices = prices;
	  initFrame();
	  initTable();
	  setVisible(true);
       }

       private void initFrame() {

	  setSize(width,height);
	  setLocation(500,500);
          setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);	
       }

       private void initTable() {
          // WE put the table into a JScrollPane so we can scroll
	  // up and down .  The table could contain several hundred
	  // rows which will not fit on the screen          
          table = new JTable( prices.getData(), prices.getCols());
     	  JScrollPane scroll = new JScrollPane(table);
	  add(scroll,BorderLayout.CENTER);
       }

   }
