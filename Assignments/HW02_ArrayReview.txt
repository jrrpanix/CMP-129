Array Review Questions
------------------------
Write the code and provide sample output for the following , note there are a number of hints on how to do this 
based on the Examples in GitHub (click on the link and it will bring it up).  This Assignment will take a little 
while to complete and the questions get progressively more difficult.  Do your own work, if you are having trouble 
reach out to me!  For problems (3) - (9) provide test code!  

Total 105 pts.


(1) (5pts) Write the line of code to create an initalize an int array with {1,2,3,4}


(2) (5pts) Write the line of code to create an int array of size N, where N is an int.


(3) (5pts) Write a function to create an Array and sequentially fill it with int  from 1 to N . 


(4) (10 pts) Write a function to sum the contents of an int array.  As a test case use and array of length 100, 
that was sequentially filled from 1 to 100 with the function you created in (1). Note the sum of integers from 
1 to N is given by the formula N*(N+1)/2 so your answer should be 5050.


(5) (10 pts) Write a function to reverse the contents of a char array. For example if the original array is  
char [] X = {'n' , 'o' , 'w' } then X reversed will be {'w','o','n'}.  The prvoide test code to show it works.


(6) (10 pts) Write the code to create a Random Array of int of size 20 with number in the range 0 to 100  
and then use the Arrays.sort algorithm to sort it.   Print out the results of the array on a single line.


(7)(25 pts) A important part of computer science is understanding trade offs (speed vs simplicity) how long it takes 
things to complete and the types of data you have.  Randomly generate data sets of double size in multiples of 10 , 
where the double are in the range 0-9 starting at size 100 and stopping when the data set gets to 1 Million .  
After generating the data, set the first array element to Math.PI (import java.lang.Math) and then run (import java.util.Arrasy) 
Arrays.sort() on sorted data set. After sorting the data set, do a binary search to find Math.PI and record 
keep track of how long it takes, the do a linear search to find Math.PI and record how long it takes 
(you may have to write your own linear search).   
For each size multiple repeat 5 time and report the average time to sort and search.   

for size = 100, to size = 1000000 , size *= 10

  double [] sortTime = new double[5];

  double [] binarySerachTime = new double[5]; 

   double [] linearSearchTime = new double[5];

   for trial = 1 to 5, trial++

    (a) Generate a Random Array of Double call it "D" of size with range from 0 to 9

    (b) set D[0] = Math.PI

    (c) Start the StopWatch

    (d) sort

    (e) Stop the StopWatch

    (f) sortTime[trial]=watch.timeus();


    (g) Start the StopWatch

    (h) binarySearch

    (i) Stop the StopWatch

    (j)  binarySearchTime[trial]=watch.timeus();


    (k) Start the StopWatch

    (l) binarySearch

    (m) Stop the StopWatch

    (n)  linearSearchTime[trial]=watch.timeus();

  At end of 5 trials report Sample Size, Avg Sort Time, Avg Binary Serach Time, Avg Linear Serach Time

What order of time are the algoritms increasing on as a function of the sample set?


(8) (15 pts) Use an array to implement a Stack Class of int.  A Stack is like a pile of dishes and contains the 
following methods, a check if the stack is empty, push to put something on the stack , pop to take something off 
the stack.  The constructor for stack should contain an int argument for the maximum depth the stack supports.


(9) (20 pts) Write a brute force algorithm to do matrix multiplication of 2 Dimensional Arrays.

static public double[][] MatrixMult( double [][] A , double [][] B) {

} 

As a check do a 4x4 multplication where A = Idenity Matrix and B is a 4x4 Matrix of all 1's, the result C of A*B should be all 1's.

